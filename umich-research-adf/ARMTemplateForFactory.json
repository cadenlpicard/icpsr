{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "umich-research-adf"
		},
		"dev_cp_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'dev_cp'"
		},
		"icpsr_blob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'icpsr_blob'"
		},
		"umich_icpsr_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'umich_icpsr'"
		},
		"icpsr_blob_sasuri_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'icpsr_blob_sasuri'"
		},
		"icpsr_vault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://icpsr-vault.vault.azure.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Import Thesaurus')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "import thesaurus json",
								"type": "DataFlowReference",
								"parameters": {
									"row": "1"
								},
								"datasetParameters": {
									"XML": {},
									"thesaurustable": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-04-17T13:47:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/import thesaurus json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_stage_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "icpsr_blob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder": {
						"type": "string"
					},
					"file": {
						"type": "string"
					}
				},
				"folder": {
					"name": "umichresearch_stage"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder",
							"type": "Expression"
						},
						"container": "stage"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"THESAURUS": {
							"type": "object",
							"properties": {
								"CONCEPT": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"DESCRIPTOR": {
												"type": "string"
											},
											"RT": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"INP": {
												"type": "string"
											},
											"UPD": {
												"type": "string"
											},
											"TNR": {
												"type": "integer"
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/icpsr_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_stage_xml')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "icpsr_blob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "umichresearch_stage"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "thesaurusexport.xml",
						"folderPath": "metadata",
						"container": "stage"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/icpsr_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dev_cp_tables')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dev_cp",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [
					{
						"name": "BT",
						"type": "VARCHAR",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "DESCRIPTOR",
						"type": "VARCHAR",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "INP",
						"type": "VARCHAR",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "NONDESCRIPTOR",
						"type": "VARCHAR",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "NT",
						"type": "VARCHAR",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "RT",
						"type": "VARCHAR",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SN",
						"type": "VARCHAR",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TNR",
						"type": "VARCHAR",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "UF",
						"type": "VARCHAR",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "UPD",
						"type": "VARCHAR",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "USES",
						"type": "VARCHAR",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "METADATA",
					"table": "THESAURAS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dev_cp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/icpsr_db')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "umich_icpsr",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema": {
						"type": "string"
					},
					"table": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/umich_icpsr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dev_cp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Snowflake",
				"typeProperties": {
					"authenticationType": "Basic",
					"connectionString": "[parameters('dev_cp_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/icpsr_blob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('icpsr_blob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/icpsr_blob_sasuri')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('icpsr_blob_sasuri_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/icpsr_vault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('icpsr_vault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/umich_icpsr')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('umich_icpsr_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/import thesaurus json')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "blob_stage_xml",
								"type": "DatasetReference"
							},
							"name": "XML"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dev_cp_tables",
								"type": "DatasetReference"
							},
							"name": "thesaurustable"
						}
					],
					"transformations": [
						{
							"name": "flatten1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     row as integer (1)",
						"}",
						"source(output(",
						"          THESAURUS as (CONCEPT as (BT as string[], DESCRIPTOR as string, INP as string, {NON-DESCRIPTOR} as string, NT as string[], RT as string[], SN as string, TNR as short, UF as string, UPD as string, USE as string)[])",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     validationMode: 'none',",
						"     namespaces: true) ~> XML",
						"XML foldDown(unroll(THESAURUS.CONCEPT),",
						"     mapColumn(",
						"          BT = THESAURUS.CONCEPT.BT,",
						"          DESCRIPTOR = THESAURUS.CONCEPT.DESCRIPTOR,",
						"          INP = THESAURUS.CONCEPT.INP,",
						"          {NON-DESCRIPTOR} = THESAURUS.CONCEPT.{NON-DESCRIPTOR},",
						"          NT = THESAURUS.CONCEPT.NT,",
						"          RT = THESAURUS.CONCEPT.RT,",
						"          SN = THESAURUS.CONCEPT.SN,",
						"          TNR = THESAURUS.CONCEPT.TNR,",
						"          UF = THESAURUS.CONCEPT.UF,",
						"          UPD = THESAURUS.CONCEPT.UPD,",
						"          USE = THESAURUS.CONCEPT.USE",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatten1",
						"flatten1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          BT as string,",
						"          DESCRIPTOR as string,",
						"          INP as string,",
						"          NONDESCRIPTOR as string,",
						"          NT as string,",
						"          RT as string,",
						"          SN as string,",
						"          TNR as string,",
						"          UF as string,",
						"          UPD as string,",
						"          USES as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     stageInsert: true,",
						"     mapColumn(",
						"          BT,",
						"          DESCRIPTOR,",
						"          INP,",
						"          NONDESCRIPTOR = {NON-DESCRIPTOR},",
						"          NT,",
						"          RT,",
						"          SN,",
						"          TNR,",
						"          UF,",
						"          UPD,",
						"          USES = USE",
						"     )) ~> thesaurustable"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/blob_stage_xml')]",
				"[concat(variables('factoryId'), '/datasets/dev_cp_tables')]"
			]
		}
	]
}