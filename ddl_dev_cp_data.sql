

CREATE OR REPLACE TABLE DEV_CP.METADATA.THESAURUS_CLEAN
AS
select TNR AS TERM_ID
,COALESCE(DESCRIPTOR, NONDESCRIPTOR) AS TERM 
,USES AS PREFERRED_TERM
,UF AS NONPREFERRED_TERM
,REPLACE(REPLACE(REPLACE(BT,'[',''),']',''),'"','') AS BROAD_TERM
,REPLACE(REPLACE(REPLACE(NT,'[',''),']',''),'"','') AS NARROW_TERM
,REPLACE(REPLACE(REPLACE(RT,'[',''),']',''),'"','') AS RELATED_TERM
,SN AS SCOPE_NOTES
,INP AS DATE_ADDED
,UPD AS DATE_UPDATED
from dev_cp.metadata.thesauras


CREATE OR REPLACE TABLE TERMS AS 
SELECT 
TERM_ID
,TERM
,SCOPE_NOTES
,DATE_ADDED
,DATE_UPDATED
FROM THESAURUS_CLEAN


CREATE OR REPLACE TABLE DEV_CP.METADATA.TERMS_RELATED
AS 
SELECT TERM_ID, TERM, PREFERRED_TERM AS RELATED_TERM, 'PREFERRED' AS RELATIONSHIP  FROM THESAURUS_CLEAN WHERE PREFERRED_TERM IS NOT NULL UNION ALL 
SELECT TERM_ID, TERM, NONPREFERRED_TERM AS RELATED_TERM, 'NONPREFERRED' FROM THESAURUS_CLEAN WHERE NONPREFERRED_TERM IS NOT NULL UNION ALL 
SELECT TERM_ID, TERM, C.value::string AS RELATED_TERM, 'BROAD' 
        FROM THESAURUS_CLEAN, LATERAL FLATTEN(input=>split(BROAD_TERM, ',')) C 
        WHERE BROAD_TERM IS NOT NULL  UNION ALL 
SELECT TERM_ID, TERM, C.value::string AS RELATED_TERM, 'NARROW' 
        FROM THESAURUS_CLEAN, LATERAL FLATTEN(input=>split(NARROW_TERM, ',')) C 
        WHERE NARROW_TERM IS NOT NULL  UNION ALL 
SELECT TERM_ID, TERM, C.value::string AS RELATED_TERM, 'RELATED' 
        FROM THESAURUS_CLEAN, LATERAL FLATTEN(input=>split(RELATED_TERM, ',')) C 
        WHERE RELATED_TERM IS NOT NULL;


